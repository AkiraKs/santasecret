import W from"@alloc/quick-lru";import{compileAst as I,env as c,Features as P}from"@tailwindcss/node";import{clearRequireCache as F}from"@tailwindcss/node/require-cache";import{Scanner as K}from"@tailwindcss/oxide";import{Features as D,transform as j}from"lightningcss";import Q from"node:fs";import $ from"node:path";import b from"postcss";var G=32;var L=40;function v(l,o=[]){for(let i=5;i<l.length;i++){let t=l.charCodeAt(i);if(t===G||t===L){let s=l.slice(0,i).trim(),n=l.slice(i).trim();return m(s,n,o)}}return m(l.trim(),"",o)}var _=64;function z(l,o=[]){return{kind:"rule",selector:l,nodes:o}}function m(l,o="",i=[]){return{kind:"at-rule",name:l,params:o,nodes:i}}function y(l,o=[]){return l.charCodeAt(0)===_?v(l,o):z(l,o)}function S(l,o,i=!1){return{kind:"declaration",property:l,value:o,important:i}}function N(l){return{kind:"comment",value:l}}function O(l){function o(t,s=0){let n="",e="  ".repeat(s);if(t.kind==="declaration")n+=`${e}${t.property}: ${t.value}${t.important?" !important":""};
`;else if(t.kind==="rule"){n+=`${e}${t.selector} {
`;for(let r of t.nodes)n+=o(r,s+1);n+=`${e}}
`}else if(t.kind==="at-rule"){if(t.nodes.length===0)return`${e}${t.name} ${t.params};
`;n+=`${e}${t.name}${t.params?` ${t.params} `:" "}{
`;for(let r of t.nodes)n+=o(r,s+1);n+=`${e}}
`}else if(t.kind==="comment")n+=`${e}/*${t.value}*/
`;else if(t.kind==="context"||t.kind==="at-root")return"";return n}let i="";for(let t of l){let s=o(t);s!==""&&(i+=s)}return i}import h from"postcss";var M=33;function T(l,o){let i=h.root();i.source=o;function t(s,n){if(s.kind==="declaration"){let e=h.decl({prop:s.property,value:s.value??"",important:s.important});e.source=o,n.append(e)}else if(s.kind==="rule"){let e=h.rule({selector:s.selector});e.source=o,e.raws.semicolon=!0,n.append(e);for(let r of s.nodes)t(r,e)}else if(s.kind==="at-rule"){let e=h.atRule({name:s.name.slice(1),params:s.params});e.source=o,e.raws.semicolon=!0,n.append(e);for(let r of s.nodes)t(r,e)}else if(s.kind==="comment"){let e=h.comment({text:s.value});e.raws.left="",e.raws.right="",e.source=o,n.append(e)}else s.kind==="at-root"||s.kind}for(let s of l)t(s,i);return i}function U(l){function o(t,s){if(t.type==="decl")s.push(S(t.prop,t.value,t.important));else if(t.type==="rule"){let n=y(t.selector);t.each(e=>o(e,n.nodes)),s.push(n)}else if(t.type==="atrule"){let n=m(`@${t.name}`,t.params);t.each(e=>o(e,n.nodes)),s.push(n)}else if(t.type==="comment"){if(t.text.charCodeAt(0)!==M)return;s.push(N(t.text))}}let i=[];return l.each(t=>o(t,i)),i}import{normalizePath as B}from"@tailwindcss/node";import C from"node:path";var k="'",R='"';function w(){let l=new WeakSet;function o(i){let t=i.root().source?.input.file;if(!t)return;let s=i.source?.input.file;if(!s||l.has(i))return;let n=i.params[0],e=n[0]===R&&n[n.length-1]===R?R:n[0]===k&&n[n.length-1]===k?k:null;if(!e)return;let r=i.params.slice(1,-1),d="";if(r.startsWith("!")&&(r=r.slice(1),d="!"),!r.startsWith("./")&&!r.startsWith("../"))return;let A=C.posix.join(B(C.dirname(s)),r),f=C.posix.dirname(B(t)),u=C.posix.relative(f,A);u.startsWith(".")||(u="./"+u),i.params=e+d+u+e,l.add(i)}return{postcssPlugin:"tailwindcss-postcss-fix-relative-paths",Once(i){i.walkAtRules(/source|plugin|config/,o)}}}var E=new W({maxSize:50});function H(l,o){let i=`${l}:${o.base??""}:${JSON.stringify(o.optimize)}`;if(E.has(i))return E.get(i);let t={mtimes:new Map,compiler:null,scanner:null,tailwindCssAst:[],cachedPostCssAst:b.root(),optimizedPostCssAst:b.root(),fullRebuildPaths:[]};return E.set(i,t),t}function q(l={}){let o=l.base??process.cwd(),i=l.optimize??process.env.NODE_ENV==="production";return{postcssPlugin:"@tailwindcss/postcss",plugins:[w(),{postcssPlugin:"tailwindcss",async Once(t,{result:s}){c.DEBUG&&console.time("[@tailwindcss/postcss] Total time in @tailwindcss/postcss");let n=s.opts.from??"",e=H(n,l),r=$.dirname($.resolve(n));async function d(){c.DEBUG&&console.time("[@tailwindcss/postcss] Setup compiler"),e.fullRebuildPaths.length>0&&!A&&F(e.fullRebuildPaths),e.fullRebuildPaths=[];let p=await I(U(t),{base:r,onDependency:a=>{e.fullRebuildPaths.push(a)}});return c.DEBUG&&console.timeEnd("[@tailwindcss/postcss] Setup compiler"),p}let A=e.compiler===null;if(e.compiler??=await d(),e.compiler.features===P.None)return;let f="incremental";{for(let a of e.fullRebuildPaths)s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:a,parent:s.opts.from});let p=s.messages.flatMap(a=>a.type!=="dependency"?[]:a.file);p.push(n);for(let a of p){let x=Q.statSync(a,{throwIfNoEntry:!1})?.mtimeMs??null;if(x===null){a===n&&(f="full");continue}e.mtimes.get(a)!==x&&(f="full",e.mtimes.set(a,x))}}if(f==="full"&&!A&&(e.compiler=await d()),e.scanner===null||f==="full"){let p=(e.compiler.root==="none"?[]:e.compiler.root===null?[{base:o,pattern:"**/*"}]:[e.compiler.root]).concat(e.compiler.globs);e.scanner=new K({sources:p})}c.DEBUG&&console.time("[@tailwindcss/postcss] Scan for candidates");let u=e.compiler.features&P.Utilities?e.scanner.scan():[];if(c.DEBUG&&console.timeEnd("[@tailwindcss/postcss] Scan for candidates"),e.compiler.features&P.Utilities){for(let p of e.scanner.files)s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:p,parent:s.opts.from});for(let{base:p,pattern:a}of e.scanner.globs)a==="*"&&o===p||(a===""?s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:p,parent:s.opts.from}):s.messages.push({type:"dir-dependency",plugin:"@tailwindcss/postcss",dir:p,glob:a,parent:s.opts.from}))}c.DEBUG&&console.time("[@tailwindcss/postcss] Build AST");let g=e.compiler.build(u);c.DEBUG&&console.timeEnd("[@tailwindcss/postcss] Build AST"),e.tailwindCssAst!==g&&(i?(c.DEBUG&&console.time("[@tailwindcss/postcss] Optimize CSS"),e.optimizedPostCssAst=b.parse(V(O(g),{minify:typeof i=="object"?i.minify:!0}),s.opts),c.DEBUG&&console.timeEnd("[@tailwindcss/postcss] Optimize CSS")):(c.DEBUG&&console.time("[@tailwindcss/postcss] Transform CSS AST into PostCSS AST"),e.cachedPostCssAst=T(g,t.source),c.DEBUG&&console.timeEnd("[@tailwindcss/postcss] Transform CSS AST into PostCSS AST"))),e.tailwindCssAst=g,c.DEBUG&&console.time("[@tailwindcss/postcss] Update PostCSS AST"),t.removeAll(),t.append(i?e.optimizedPostCssAst.clone().nodes:e.cachedPostCssAst.clone().nodes),t.raws.indent="  ",c.DEBUG&&console.timeEnd("[@tailwindcss/postcss] Update PostCSS AST"),c.DEBUG&&console.timeEnd("[@tailwindcss/postcss] Total time in @tailwindcss/postcss")}}]}}function V(l,{file:o="input.css",minify:i=!1}={}){function t(s){return j({filename:o,code:s,minify:i,sourceMap:!1,drafts:{customMedia:!0},nonStandard:{deepSelectorCombinator:!0},include:D.Nesting,exclude:D.LogicalProperties,targets:{safari:16<<16|1024,ios_saf:16<<16|1024,firefox:8388608,chrome:7864320},errorRecovery:!0}).code}return t(t(Buffer.from(l))).toString()}var Ce=Object.assign(q,{postcss:!0});export{Ce as default};
